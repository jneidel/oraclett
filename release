#! /bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$1" ]; then
  cat <<EOF
$ release TYPE
Release a new version

Parameters:
  \$1: one of major, minor, patch

Example:
  $ release patch
EOF
  exit
fi

command -v npm >/dev/null || { echo "npm is not installed" 1>&2; exit 127; }
command -v oclif >/dev/null || { echo "oclif is not installed" 1>&2; exit 127; }

if [ "$1" != "major" ] && [ "$1" != "minor" ] && [ "$1" != "patch" ]; then
  echo "\$1 has to be one of: major, minor, patch"
  exit 1
fi

VERSION="$(npm --no-git-tag-version version $1)"

# prepare changelog
ex CHANGELOG.md <<EOF >/dev/null
3 insert
## $VERSION

### Improvements

- <++>

### Fixes

- <++>

.
xit
EOF
echo "Appended version to CHANGELOG.md, please describe changes there."

printf "Ready to continue (y/N): "
read ans
if [ ! "$ans" = "y" ] && [ ! "$ans" = "Y" ]; then
  exit 1
fi

# track changes to release relevant files only here
git update-index --no-assume-unchanged oclif.manifest.json npm-shrinkwrap.json
oclif manifest
npm shrinkwrap

echo "Releasing '$VERSION'"
git add npm-shrinkwrap.json oclif.manifest.json package.json CHANGELOG.md
git commit -m $VERSION
git tag $VERSION

# npm block requests through mullvad
disable-mullvad-for npm publish

# ignore for development
rm oclif.manifest.json
git update-index --assume-unchanged oclif.manifest.json npm-shrinkwrap.json
